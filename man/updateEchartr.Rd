% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/echartr.R
\name{updateEchartr}
\alias{updateEchartr}
\title{Update an echartr instance}
\usage{
updateEchartr(
  session = shiny::getDefaultReactiveDomain(),
  outputId,
  option = NULL,
  on = NULL,
  off = NULL,
  dispatch = NULL,
  listen = NULL
)
}
\arguments{
\item{session}{The Shiny session object. Defaults to the current Shiny session.}

\item{outputId}{The Shiny output ID of the \code{echartr} instance.}

\item{option}{list-tree representation of echart option argument, see \link{https://echarts.apache.org/en/option.html}}

\item{on}{list of event listeners to register, see \link{https://echarts.apache.org/en/api.html#echartsInstance.on}}

\item{off}{list of event listeners to de-register, see \link{https://echarts.apache.org/en/api.html#echartsInstance.off}}

\item{dispatch}{list of actions to immediately dispatch, see \link{https://echarts.apache.org/en/api.html#echartsInstance.dispatchAction}}

\item{listen}{character vector of events to include in Shiny input, any of \link{https://echarts.apache.org/en/api.html#events}

Event output is available as \verb{input$<outputId>_<event>}. For mouse events, event data is limited.

\code{listen} will only add new listeners - to deregister existing listeners, use \code{off}.

Intention is to support all functions under https://echarts.apache.org/en/api.html#echartsInstance}
}
\description{
\code{updateEchartr()} updates an echartr instance within a Shiny application.
}
